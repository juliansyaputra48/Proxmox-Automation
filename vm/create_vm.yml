- name: Create VM full clone
  proxmox_kvm:
    api_host: "{{ api_host }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    node: "{{ node }}"
    name: "{{ vmesin_item.name }}"
    clone: "{{ vm_clone }}"
    state: present
    timeout: 300
  with_items: "{{ vms }}"
  loop_control:
    loop_var: vmesin_item

- name: Get CSRF Token
  ansible.builtin.uri:
    url: "{{ proxmox_api_url }}/access/ticket"
    method: POST
    user: "{{ api_user }}"
    password: "{{ api_password }}"
    validate_certs: no
    body_format: json
    body:
      username: "{{ api_user }}"
      password: "{{ api_password }}"
  register: csrf_token_result
  delegate_to: localhost

- name: Update Ip Address VM Configuration
  ansible.builtin.uri:
    url: "{{ proxmox_api_url }}/nodes/{{ node }}/qemu/{{ vmesin_item.vmid }}/config"
    method: PUT
    headers:
      Cookie: PVEAuthCookie={{ csrf_token_result.json.data.ticket }}
      CSRFPreventionToken: "{{ csrf_token_result.json.data.CSRFPreventionToken }}"
    validate_certs: no  # Disable SSL verification
    body_format: json
    body:
      ipconfig0: "{{ vmesin_item.ipconfig0 }},gw={{ vm_gateway}}"
      ciuser: "{{ vmesin_item.ciuser }}"
      cipassword: "{{ vmesin_item.cipassword }}"
      nameserver: "{{ vm_nameserver }}"
      description: "Updated qemu description"
  register: api_response
  delegate_to: localhost
  with_items: "{{ vms }}"
  loop_control:
    loop_var: vmesin_item
